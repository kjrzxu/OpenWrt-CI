#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: compile OpenWrt-CI

on:
#  push:
#    branches: 
#      - master
#  schedule:
#    - cron: 0 0 1 * *
#  watch:
#    types: started
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: 准备工作
        uses: actions/checkout@master

      - name: 部署编译环境
        run: |
          sudo apt update -y
          sudo apt full-upgrade -y
          sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
          git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
          libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
          mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools \
          libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
          vim wget xmlto xxd zlib1g-dev
      - name: 下载lede源码
        run: git clone https://github.com/immortalwrt/immortalwrt openwrt
#        run: git clone https://github.com/coolsnowwolf/lede openwrt
      - name: 写入插件到默认配置
        run: |
          cd openwrt
          echo "src-git package https://github.com/kjrzxu/package.git" >> ./feeds.conf.default
          echo "src-git openclash https://github.com/vernesong/OpenClash.git" >> ./feeds.conf.default
      - name: 升级feeds
        run: cd openwrt && ./scripts/feeds update -a
      - name: 修改文件
        run: |
          rm -rf openwrt/feeds/luci/applications/luci-app-eqos
          rm -rf openwrt/feeds/luci/applications/luci-app-fileassistant
          rm -rf openwrt/feeds/luci/applications/luci-app-usb3disable
          sed -i 's#sda#/mnt/sda1#' openwrt/feeds/packages/utils/hd-idle/files/hd-idle.config
          sed -i 's/_("OpenClash"/_("科学上网"/' openwrt/feeds/openclash/luci-app-openclash/luasrc/controller/openclash.lua
          sed -i '/cloudflared.init $/d' openwrt/feeds/packages/net/cloudflared/Makefile
          rm openwrt/feeds/packages/net/cloudflared/files/cloudflared.init
      - name: 安装feeds
        run: cd openwrt && ./scripts/feeds install -a
      - name: 配置config文件
        run: |
          cd openwrt
          touch ./.config
          # 机型设置:
          cat >> .config <<EOF
          CONFIG_TARGET_ramips=y
          CONFIG_TARGET_ramips_mt7621=y
          CONFIG_TARGET_ramips_mt7621_DEVICE_hiwifi_hc5962=y
          EOF
          # 常用插件
          cat >> .config <<EOF
          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_autosamba=y
          CONFIG_PACKAGE_automount=y
          CONFIG_PACKAGE_cloudflared=y
          CONFIG_PACKAGE_ddns-scripts_cloudflare.com-v4=y
          CONFIG_PACKAGE_xupnpd=y
          CONFIG_PACKAGE_cloudflared=y
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-app-argon-config=y
          CONFIG_PACKAGE_luci-app-accesscontrol=y
          CONFIG_PACKAGE_luci-app-adbyby-plus=y
          CONFIG_PACKAGE_luci-app-advanced=y
          CONFIG_PACKAGE_luci-app-arpbind=y
          CONFIG_PACKAGE_luci-app-autoreboot=y
          CONFIG_PACKAGE_luci-app-cloudflared=y
          CONFIG_PACKAGE_luci-app-control-speedlimit=y
          CONFIG_PACKAGE_luci-app-control-weburl=y
          CONFIG_PACKAGE_luci-app-ddns=y
          CONFIG_PACKAGE_luci-app-diskman=y
          CONFIG_PACKAGE_luci-app-easymesh=y
          CONFIG_PACKAGE_luci-app-fileassistant=y
          CONFIG_PACKAGE_luci-app-filetransfer=n
          CONFIG_PACKAGE_luci-app-frpc=y
          CONFIG_PACKAGE_luci-app-hd-idle=y
          CONFIG_PACKAGE_luci-app-iptvhelper=y
          CONFIG_PACKAGE_luci-app-mwan3=y
          CONFIG_PACKAGE_luci-app-nlbwmon=y
          CONFIG_PACKAGE_luci-app-omcproxy=y
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_luci-app-ramfree=y
          CONFIG_PACKAGE_luci-app-socat=y
          CONFIG_PACKAGE_luci-app-ssr-plus=n
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Xray=n
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=n
          CONFIG_PACKAGE_luci-app-syncdial=y
          CONFIG_PACKAGE_luci-app-ttyd=y
          CONFIG_PACKAGE_luci-app-turboacc=y
          CONFIG_PACKAGE_luci-app-udpxy=y
          CONFIG_PACKAGE_luci-app-uhttpd=y
          #CONFIG_PACKAGE_luci-app-unblockmusic=y
          CONFIG_PACKAGE_luci-app-upnp=y
          #CONFIG_PACKAGE_luci-app-usb-printer=y
          CONFIG_PACKAGE_luci-app-vlmcsd=y
          CONFIG_PACKAGE_luci-app-vsftpd=y
          CONFIG_PACKAGE_luci-app-wol=y
          CONFIG_PACKAGE_luci-app-wrtbwmon=y
          CONFIG_PACKAGE_luci-app-zerotier=y
          EOF
          make defconfig
      - name: 下载软件包
        run: |
          cd openwrt
          make download -j8
          find dl -size -1024c -exec rm -f {} \;
      - name: 编译插件
        run: |
          cd openwrt
          echo -e "$(nproc) thread ../files."
          make -j$(($(nproc) + 1)) V=s
      - name : 上传bin文件夹到 github actions
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt_firmware
          path: openwrt/bin
